// Generated by Dagger (https://dagger.dev).
package com.solopov.feature_authentication_impl.data.di;

import com.solopov.common.core.resources.ResourceManager;
import com.solopov.common.data.firebase.dao.UserFirebaseDao;
import com.solopov.common.data.firebase.di.FirebaseApi;
import com.solopov.common.di.CommonApi;
import dagger.internal.DaggerGenerated;
import dagger.internal.Preconditions;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DaggerAuthFeatureComponent_AuthFeatureDependenciesComponent {
  private DaggerAuthFeatureComponent_AuthFeatureDependenciesComponent() {
  }

  public static Builder builder() {
    return new Builder();
  }

  public static final class Builder {
    private CommonApi commonApi;

    private FirebaseApi firebaseApi;

    private Builder() {
    }

    public Builder commonApi(CommonApi commonApi) {
      this.commonApi = Preconditions.checkNotNull(commonApi);
      return this;
    }

    public Builder firebaseApi(FirebaseApi firebaseApi) {
      this.firebaseApi = Preconditions.checkNotNull(firebaseApi);
      return this;
    }

    public AuthFeatureComponent.AuthFeatureDependenciesComponent build() {
      Preconditions.checkBuilderRequirement(commonApi, CommonApi.class);
      Preconditions.checkBuilderRequirement(firebaseApi, FirebaseApi.class);
      return new AuthFeatureDependenciesComponentImpl(commonApi, firebaseApi);
    }
  }

  private static final class AuthFeatureDependenciesComponentImpl implements AuthFeatureComponent.AuthFeatureDependenciesComponent {
    private final CommonApi commonApi;

    private final FirebaseApi firebaseApi;

    private final AuthFeatureDependenciesComponentImpl authFeatureDependenciesComponentImpl = this;

    private AuthFeatureDependenciesComponentImpl(CommonApi commonApiParam,
        FirebaseApi firebaseApiParam) {
      this.commonApi = commonApiParam;
      this.firebaseApi = firebaseApiParam;

    }

    @Override
    public ResourceManager resourceManager() {
      return Preconditions.checkNotNullFromComponent(commonApi.provideResourceManager());
    }

    @Override
    public UserFirebaseDao userFirebaseDao() {
      return Preconditions.checkNotNullFromComponent(firebaseApi.provideUserFirebaseDao());
    }
  }
}
