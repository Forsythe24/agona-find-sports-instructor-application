// Generated by Dagger (https://dagger.dev).
package com.solopov.feature_authentication_impl.data.di;

import com.solopov.common.di.FeatureContainer;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("com.solopov.common.di.scope.ApplicationScope")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class AuthFeatureHolder_Factory implements Factory<AuthFeatureHolder> {
  private final Provider<FeatureContainer> featureContainerProvider;

  public AuthFeatureHolder_Factory(Provider<FeatureContainer> featureContainerProvider) {
    this.featureContainerProvider = featureContainerProvider;
  }

  @Override
  public AuthFeatureHolder get() {
    return newInstance(featureContainerProvider.get());
  }

  public static AuthFeatureHolder_Factory create(
      Provider<FeatureContainer> featureContainerProvider) {
    return new AuthFeatureHolder_Factory(featureContainerProvider);
  }

  public static AuthFeatureHolder newInstance(FeatureContainer featureContainer) {
    return new AuthFeatureHolder(featureContainer);
  }
}
