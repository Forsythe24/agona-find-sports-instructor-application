// Generated by view binder compiler. Do not edit!
package com.solopov.instructors.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.solopov.instructors.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemInstructorBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final View backgroundView;

  @NonNull
  public final TextView descriptionTv;

  @NonNull
  public final TextView hourlyRateTv;

  @NonNull
  public final TextView instructorInfoTv;

  @NonNull
  public final ConstraintLayout itemCl;

  @NonNull
  public final CardView itemCv;

  @NonNull
  public final TextView nameTv;

  @NonNull
  public final TextView numberOfRatingsTv;

  @NonNull
  public final TextView ratingTv;

  private ItemInstructorBinding(@NonNull ConstraintLayout rootView, @NonNull View backgroundView,
      @NonNull TextView descriptionTv, @NonNull TextView hourlyRateTv,
      @NonNull TextView instructorInfoTv, @NonNull ConstraintLayout itemCl,
      @NonNull CardView itemCv, @NonNull TextView nameTv, @NonNull TextView numberOfRatingsTv,
      @NonNull TextView ratingTv) {
    this.rootView = rootView;
    this.backgroundView = backgroundView;
    this.descriptionTv = descriptionTv;
    this.hourlyRateTv = hourlyRateTv;
    this.instructorInfoTv = instructorInfoTv;
    this.itemCl = itemCl;
    this.itemCv = itemCv;
    this.nameTv = nameTv;
    this.numberOfRatingsTv = numberOfRatingsTv;
    this.ratingTv = ratingTv;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemInstructorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemInstructorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_instructor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemInstructorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.background_view;
      View backgroundView = ViewBindings.findChildViewById(rootView, id);
      if (backgroundView == null) {
        break missingId;
      }

      id = R.id.description_tv;
      TextView descriptionTv = ViewBindings.findChildViewById(rootView, id);
      if (descriptionTv == null) {
        break missingId;
      }

      id = R.id.hourly_rate_tv;
      TextView hourlyRateTv = ViewBindings.findChildViewById(rootView, id);
      if (hourlyRateTv == null) {
        break missingId;
      }

      id = R.id.instructor_info_tv;
      TextView instructorInfoTv = ViewBindings.findChildViewById(rootView, id);
      if (instructorInfoTv == null) {
        break missingId;
      }

      id = R.id.item_cl;
      ConstraintLayout itemCl = ViewBindings.findChildViewById(rootView, id);
      if (itemCl == null) {
        break missingId;
      }

      id = R.id.item_cv;
      CardView itemCv = ViewBindings.findChildViewById(rootView, id);
      if (itemCv == null) {
        break missingId;
      }

      id = R.id.name_tv;
      TextView nameTv = ViewBindings.findChildViewById(rootView, id);
      if (nameTv == null) {
        break missingId;
      }

      id = R.id.number_of_ratings_tv;
      TextView numberOfRatingsTv = ViewBindings.findChildViewById(rootView, id);
      if (numberOfRatingsTv == null) {
        break missingId;
      }

      id = R.id.rating_tv;
      TextView ratingTv = ViewBindings.findChildViewById(rootView, id);
      if (ratingTv == null) {
        break missingId;
      }

      return new ItemInstructorBinding((ConstraintLayout) rootView, backgroundView, descriptionTv,
          hourlyRateTv, instructorInfoTv, itemCl, itemCv, nameTv, numberOfRatingsTv, ratingTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
