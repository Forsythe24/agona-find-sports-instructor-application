// Generated by Dagger (https://dagger.dev).
package com.solopov.users.presentation.list.di;

import androidx.lifecycle.ViewModel;
import com.solopov.common.core.resources.ResourceManager;
import com.solopov.feature_instructor_api.domain.interfaces.InstructorInteractor;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class InstructorsModule_ProvideInstructorsViewModelFactory implements Factory<ViewModel> {
  private final InstructorsModule module;

  private final Provider<InstructorInteractor> interactorProvider;

  private final Provider<ResourceManager> resourceManagerProvider;

  public InstructorsModule_ProvideInstructorsViewModelFactory(InstructorsModule module,
      Provider<InstructorInteractor> interactorProvider,
      Provider<ResourceManager> resourceManagerProvider) {
    this.module = module;
    this.interactorProvider = interactorProvider;
    this.resourceManagerProvider = resourceManagerProvider;
  }

  @Override
  public ViewModel get() {
    return provideInstructorsViewModel(module, interactorProvider.get(), resourceManagerProvider.get());
  }

  public static InstructorsModule_ProvideInstructorsViewModelFactory create(
      InstructorsModule module, Provider<InstructorInteractor> interactorProvider,
      Provider<ResourceManager> resourceManagerProvider) {
    return new InstructorsModule_ProvideInstructorsViewModelFactory(module, interactorProvider, resourceManagerProvider);
  }

  public static ViewModel provideInstructorsViewModel(InstructorsModule instance,
      InstructorInteractor interactor, ResourceManager resourceManager) {
    return Preconditions.checkNotNullFromProvides(instance.provideInstructorsViewModel(interactor, resourceManager));
  }
}
